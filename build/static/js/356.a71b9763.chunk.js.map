{"version":3,"file":"static/js/356.a71b9763.chunk.js","mappings":"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","sources":["components/AdminPanel/AdminProducts/ProductsAdmin/SingleProductComponent.js","components/AdminPanel/AdminProducts/ProductsAdmin/index.js","customHooks/useIntersectionObserver.js","features/products/ProductList/SelectComponent.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { selectLoggedUser } from \"../../../../features/login/loginSlice\";\n\nexport const Container = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  align-items: start;\n  gap: 5px;\n  height: 190px;\n  width: 100%;\n  overflow: hidden;\n  color: ${({ theme }) => theme.color};\n  box-shadow: 0px 0px 2px 0px rgba(0, 0, 0, 0.7);\n  transition: all 0.3s;\n\n  @media only screen and (max-width: 1000px) {\n    flex-direction: column;\n    justify-content: start;\n    flex-wrap: no-wrap;\n    height: 360px;\n  }\n\n  @media only screen and (min-width: 800px) {\n    width: 48%;\n  }\n`;\n\nexport const ImageContainer = styled.div`\n  width: 200px;\n  align-self: stretch;\n  position: relative;\n\n  @media only screen and (max-width: 1000px) {\n    width: 100%;\n  }\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 190px;\n  object-fit: cover;\n`;\n\nexport const Info = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  gap: 5px;\n  padding: 10px;\n`;\n\nexport const Title = styled.p`\n  font-size: 20px;\n  max-height: 46px;\n  overflow: hidden;\n`;\n\nexport const Description = styled.p`\n  font-size: 14px;\n  max-height: 70px;\n  overflow: hidden;\n`;\n\nconst Price = styled.p`\n  font-size: 14px;\n  font-weight: 800;\n`;\n\nexport const ButtonsContainer = styled.div`\n  position: absolute;\n  bottom: 5px;\n  right: 5px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 10px;\n`;\n\nexport const Button = styled.button`\n  background-color: red;\n  color: white;\n  padding: 2px;\n  font-size: 12px;\n  border: none;\n  border-radius: 1px;\n  cursor: pointer;\n  transition: all 0.2s;\n\n  &:hover {\n    background-color: black;\n  }\n\n  &:active {\n    transform: scale(0.97);\n  }\n`;\n\nfunction SingleProductComponent({ product }) {\n  const admin = useSelector(selectLoggedUser);\n\n  return (\n    <Container>\n      <ImageContainer>\n        <Image\n          alt=\"product image\"\n          src={`/public/data/uploads/products/${product.id}.webp`}\n        />\n      </ImageContainer>\n      <Info>\n        <Title>{product.title}</Title>\n        <Description>{product.description}</Description>\n        <p>ID: {product.id}</p>\n        <Price>${product.price}</Price>\n        <ButtonsContainer>\n          <Link\n            to={`/${admin.id}/admin-panel/products/single-stats/${product.id}`}\n          >\n            <Button>Stats</Button>\n          </Link>\n          <Link to={`/${admin.id}/admin-panel/products/single/${product.id}`}>\n            <Button>Update</Button>\n          </Link>\n        </ButtonsContainer>\n      </Info>\n    </Container>\n  );\n}\n\nexport default SingleProductComponent;\n","import { useEffect, useMemo, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectAllCategories } from \"../../../../features/categories/categoriesSlice\";\nimport useIntersectionObserver from \"../../../../customHooks/useIntersectionObserver\";\nimport {\n  emptyProducts,\n  getAllProducts,\n  selectAllProducts,\n  selectProductsLoading,\n} from \"../../../../features/products/productsSlice\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport SelectComponent from \"../../../../features/products/ProductList/SelectComponent\";\nimport Spinner from \"../../../Spinner\";\nimport SingleProductComponent from \"./SingleProductComponent\";\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  justify-content: start;\n  gap: 20px;\n  width: 100%;\n  padding: 20px;\n  color: ${({ theme }) => theme.color};\n  transition: all 0.3s;\n`;\n\nexport const FilterContainer = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n  gap: 20px;\n\n  @media only screen and (max-width: 800px) {\n    flex-direction: column;\n  }\n`;\n\nexport const Filter = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n\n  @media only screen and (max-width: 400px) {\n    flex-direction: column;\n    align-items: start;\n  }\n`;\n\nexport const FilterText = styled.p`\n  font-size: 18px;\n`;\n\nconst ProductContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: start;\n  justify-content: start;\n  gap: 15px;\n  transition: all 0.3s;\n`;\n\nexport const SpinnerContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 70px;\n  width: 100%;\n  margin-top: auto;\n`;\n\nfunction ProductsAdmin() {\n  const [offset, setOffset] = useState(0);\n  const [stopLoading, setStopLoading] = useState(false);\n  const dispatch = useDispatch();\n  const products = useSelector(selectAllProducts);\n  const loading = useSelector(selectProductsLoading);\n  const endRef = useRef(null);\n  const intersecting = useIntersectionObserver(endRef);\n  const limit = 4;\n  const categories = useSelector(selectAllCategories).map((c) => c.name);\n  const [colors, setColors] = useState([]);\n  const [sizes, setSizes] = useState([]);\n  const sorts = useMemo(\n    () => ({\n      \"price (asc)\": [\"price,ASC\"],\n      \"price (desc)\": [\"price,DESC\"],\n      newest: [\"createdAt,DESC\"],\n      oldest: [\"createdAt,ASC\"],\n    }),\n    []\n  );\n  const [category, setCategory] = useState(\"\");\n  const [color, setColor] = useState(\"\");\n  const [size, setSize] = useState(\"\");\n  const [sort, setSort] = useState(\"\");\n\n  useEffect(() => {\n    return () => window.scroll({ top: 0, left: 0 });\n  }, []);\n\n  useEffect(() => {\n    setOffset(0);\n    dispatch(emptyProducts());\n  }, [category, color, size, sort, dispatch]);\n\n  useEffect(() => {\n    async function fetchColorsSizes() {\n      const response = await axios.get(\"/api/products/colors-sizes\");\n      setColors(response.data.uniqueColors);\n      setSizes(response.data.uniqueSizes);\n    }\n    fetchColorsSizes();\n  }, []);\n\n  useEffect(() => {\n    if (intersecting && !stopLoading) {\n      setOffset((prev) => prev + limit);\n    }\n  }, [intersecting, stopLoading]);\n\n  useEffect(() => {\n    if (offset - limit > products.length) {\n      setStopLoading(true);\n    } else {\n      setStopLoading(false);\n    }\n  }, [offset, products.length]);\n\n  useEffect(() => {\n    if (offset === products.length) {\n      dispatch(\n        getAllProducts(\n          `?pagination=${offset},${limit}${\n            category ? `&category=${category}` : \"\"\n          }${color ? `&color=${color}` : \"\"}${size ? `&size=${size}` : \"\"}${\n            sort ? `&order=${sorts[sort]}` : \"\"\n          }`\n        )\n      );\n    }\n  }, [offset, products.length, category, color, size, sort, sorts, dispatch]);\n\n  return (\n    <Container>\n      <FilterContainer>\n        <Filter>\n          <FilterText>Filter products</FilterText>\n          <SelectComponent\n            defaultValue=\"categories\"\n            setValue={setCategory}\n            values={categories}\n          />\n          <SelectComponent\n            defaultValue=\"colors\"\n            setValue={setColor}\n            values={colors}\n          />\n          <SelectComponent\n            defaultValue=\"sizes\"\n            setValue={setSize}\n            values={sizes}\n          />\n        </Filter>\n        <Filter>\n          <FilterText>Sort by</FilterText>\n          <SelectComponent\n            defaultValue=\"criterium\"\n            setValue={setSort}\n            values={Object.keys(sorts)}\n          />\n        </Filter>\n      </FilterContainer>\n      <ProductContainer>\n        {products.map((p) => (\n          <SingleProductComponent key={p.id} product={p} />\n        ))}\n      </ProductContainer>\n      <SpinnerContainer ref={endRef}>{loading && <Spinner />}</SpinnerContainer>\n    </Container>\n  );\n}\n\nexport default ProductsAdmin;\n","import { useEffect, useState } from \"react\";\n\nfunction useIntersectionObserver(ref) {\n  const [intersecting, setIntersecting] = useState(false);\n\n  useEffect(() => {\n    const options = {\n      root: null,\n      rootMargin: \"0px\",\n      threshold: 1,\n    };\n\n    const observer = new IntersectionObserver((targets) => {\n      const [target] = targets;\n      if (target.isIntersecting) {\n        setIntersecting(true);\n      } else {\n        setIntersecting(false);\n      }\n    }, options);\n\n    observer.observe(ref.current);\n  }, [ref]);\n\n  return intersecting;\n}\n\nexport default useIntersectionObserver;\n","import styled from \"styled-components\";\n\nconst Select = styled.select`\n  background-color: inherit;\n  color: inherit;\n  border: 1px solid ${({ theme }) => theme.color};\n  padding: 5px;\n`;\n\nconst Option = styled.option``;\n\nfunction SelectComponent({ defaultValue, setValue, values }) {\n  return (\n    <Select onChange={(e) => setValue(e.target.value)}>\n      <Option value=\"\">{defaultValue}</Option>\n      {values.map((v) => (\n        <Option key={v} value={v}>\n          {v}\n        </Option>\n      ))}\n    </Select>\n  );\n}\n\nexport default SelectComponent;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","_ref","theme","color","ImageContainer","_templateObject2","Image","_templateObject3","Info","_templateObject4","Title","_templateObject5","Description","_templateObject6","Price","_templateObject7","ButtonsContainer","_templateObject8","Button","_templateObject9","_ref2","product","admin","useSelector","selectLoggedUser","_jsxs","children","_jsx","alt","src","concat","id","title","description","price","Link","to","FilterContainer","Filter","FilterText","ProductContainer","SpinnerContainer","_useState","useState","_useState2","_slicedToArray","offset","setOffset","_useState3","_useState4","stopLoading","setStopLoading","dispatch","useDispatch","products","selectAllProducts","loading","selectProductsLoading","endRef","useRef","intersecting","useIntersectionObserver","categories","selectAllCategories","map","c","name","_useState5","_useState6","colors","setColors","_useState7","_useState8","sizes","setSizes","sorts","useMemo","newest","oldest","_useState9","_useState10","category","setCategory","_useState11","_useState12","setColor","_useState13","_useState14","size","setSize","_useState15","_useState16","sort","setSort","useEffect","window","scroll","top","left","emptyProducts","_fetchColorsSizes","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","axios","sent","data","uniqueColors","uniqueSizes","stop","apply","arguments","fetchColorsSizes","length","getAllProducts","SelectComponent","defaultValue","setValue","values","Object","keys","p","SingleProductComponent","ref","Spinner","setIntersecting","IntersectionObserver","targets","isIntersecting","root","rootMargin","threshold","observe","current","Select","Option","onChange","e","target","value","v"],"sourceRoot":""}